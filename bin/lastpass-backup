#!/usr/bin/env ruby-2.0
# -*- mode: ruby -*-

# requires: gpg executable in the path (brew install gpg)
# requires: lastpass gem (https://github.com/detunized/lastpass-ruby)

# the Gemfile:
# source 'https://rubygems.org'
# gem 'main'
# gem 'git'
# gem 'lastpass'
# GEM
#   remote: https://rubygems.org/
#   specs:
#     arrayfields (4.9.0)
#     chronic (0.9.1)
#     fattr (2.2.1)
#     git (1.2.5)
#     httparty (0.12.0)
#       json (~> 1.8)
#       multi_xml (>= 0.5.2)
#     json (1.8.1)
#     lastpass (1.0.1)
#       httparty (~> 0.12.0)
#       pbkdf2-ruby (~> 0.2.0)
#     main (5.2.0)
#       arrayfields (>= 4.7.4)
#       chronic (>= 0.6.2)
#       fattr (>= 2.2.0)
#       map (>= 5.1.0)
#     map (6.4.0)
#     multi_xml (0.5.5)
#     pbkdf2-ruby (0.2.0)

# PLATFORMS
#   ruby

# DEPENDENCIES
#   git
#   lastpass
#   main

require 'io/console' # for noecho
require 'lastpass'

unless ARGV.length == 1
  puts "Error: argument missing."
  puts "Please enter the location to save the encrypted lastpass export as first argument."
  exit 10
end

# get user credentials
print "Lastpass Email: "
lp_email = $stdin.noecho(&:gets).strip
puts ""

print "Lastpass Password: "
lp_password = $stdin.noecho(&:gets).strip
puts ""

puts "Connecting to lastpass"

vault = LastPass::Vault.open_remote(lp_email, lp_password)

lastpass_db_filename = ARGV[0]

print "GPG Passphrase to encrypt export: "
gpg_password = $stdin.noecho(&:gets)
puts ""

IO.popen(['gpg', '--batch', '--passphrase-fd', '0', '--output', lastpass_db_filename, '--symmetric'], 'r+') do |gpg_io|
  gpg_io.puts gpg_password; gpg_io.puts gpg_password # enter password twice
  vault.accounts.each do |i|
    gpg_io.puts "#{i.name}: #{i.username}, #{i.password} (#{i.url})"
  end
end


puts "You access the export by running: "
puts "    gpg -d #{lastpass_db_filename}"
puts "And entering the GPG passphrase you used."
